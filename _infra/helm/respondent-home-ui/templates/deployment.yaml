apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
    env: {{ .Values.env }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }}
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      env: {{ required "A valid .Values.env entry required!" .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        env: {{ required "A valid .Values.env entry required!" .Values.env }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.name }}/{{ .Chart.Name }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-server
              containerPort: {{ .Values.container.port }}
          readinessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            httpGet:
              path: /info
              port: {{ .Values.container.port }}
            initialDelaySeconds: 1
            periodSeconds: 20
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
          - name: SECURITY_USER_NAME
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-user
          - name: SECURITY_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: security-credentials
                key: security-password
          - name: JSON_SECRET_KEYS
            valueFrom:
              secretKeyRef:
                name: json-secrets
                key: json-secret-keys-rh
          - name: APP_SETTINGS
            value: "DevelopmentConfig"
          - name: PORT
            value: "{{ .Values.container.port }}"
          - name: EQ_URL
            value: "http://localhost:5000"
          - name: ACCOUNT_SERVICE_URL
            value: "$(ACCOUNT_SERVICE_URL)"
          - name: CASE_URL
            value: "http://$(CASE_SERVICE_HOST):$(CASE_SERVICE_PORT)"
          - name: CASE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: CASE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: COLLECTION_EXERCISE_URL
            value: "http://$(COLLECTION_EXERCISE_SERVICE_HOST):$(COLLECTION_EXERCISE_SERVICE_PORT)"
          - name: COLLECTION_EXERCISE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: COLLECTION_EXERCISE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: COLLECTION_INSTRUMENT_URL
            value: "http://$(COLLECTION_INSTRUMENT_SERVICE_HOST):$(COLLECTION_INSTRUMENT_SERVICE_PORT)"
          - name: COLLECTION_INSTRUMENT_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: COLLECTION_INSTRUMENT_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: IAC_URL
            value: "http://$(IAC_SERVICE_HOST):$(IAC_SERVICE_PORT)"
          - name: IAC_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: IAC_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: REDIS_HOST
            value: "$(REDIS_MASTER_SERVICE_HOST)"
          - name: REDIS_PORT
            value: "$(REDIS_MASTER_SERVICE_PORT)"
          - name: SAMPLE_URL
            value: "http://$(SAMPLE_SERVICE_HOST):$(SAMPLE_SERVICE_PORT)"
          - name: SAMPLE_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: SAMPLE_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          - name: SURVEY_URL
            value: "http://$(SURVEY_SERVICE_HOST):$(SURVEY_SERVICE_PORT)"
          - name: SURVEY_USERNAME
            value: "$(SECURITY_USER_NAME)"
          - name: SURVEY_PASSWORD
            value: "$(SECURITY_USER_PASSWORD)"
          resources:
            {{ toYaml .Values.resources | nindent 12 }}